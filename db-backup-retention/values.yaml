# Default values for db-backup-retention.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- string to partially override db-backup-rentention.fullname
nameOverride: ""

# -- string to fully override db-backup-rentention.fullname
fullnameOverride: ""

# -- common annotations to add to all resources
commonAnnotations: {}

# -- common labels to add to all resources
commonLabels: {}

config:
  # -- the name of the pod running the database (will be used to run backup command)
  dbPod: my-mariadb-0
  # -- the name of the database user to use for backup (either direct value or through secret)
  dbUser:
    # -- the name of the database user to use for backup
    value: root
    #secret:
    #  name: my-db-secret
    #  key: my-secret-user-key
  # -- the database password to use for backup (either direct value or through secret)
  dbPassword:
    # value: keepMeSecret!
    secret:
      name: my-db-secret
      key: my-secret-password-key
  # -- the database name to backup or `--all-databases` if mysqldump is used. Will be ignored for pg_dumpall.
  backupDatabases: --all-databases
  # -- the retention time in minutes for backups (default 43200 minutes = 30 days)
  retentionMinutes: 43200
  # -- the path to store the backup file
  backupMountPath: /backups
  # -- the executable to run for backup. Allowed values are: mysqldump, mariadb-dump, pg_dump, & pg_dumpall.
  backupExec: mariadb-dump
  # -- the prefix for the backup file (will produce: db-backup-2025-02-04T20:00:01+00:00.sql.gz)
  backupFilePrefix: db-backup


cronjob:
  # -- cronjob schedule in cron format (visit https://crontab.guru/ for help with the syntax). Default is every hour.
  schedule: 0 * * * *
  # -- cronjob concurrency policy
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 2
  successfulJobsHistoryLimit: 1
  backoffLimit: 2
  restartPolicy: Never


persistence:
  # -- persistence.enabled Enable persistence to store backups using a `PersistentVolumeClaim`. If false, use emptyDir - for testing only.
  enabled: true
  # -- persistence.existingClaim Name of an existing `PersistentVolumeClaim` for 
  # NOTE: When it's set the rest of persistence parameters are ignored
  existingClaim: ""
  # -- persistence.storageClass backups persistent volume storage class
  # If defined, storageClassName: <storageClass>
  # If set to "-", storageClassName: "", which disables dynamic provisioning
  # If undefined (the default) or set to null, no storageClassName spec is
  #   set, choosing the default provisioner.  (gp2 on AWS, standard on
  #   GKE, AWS & OpenStack)
  #
  storageClass: ""
  # -- primary.persistence.labels Labels for the PVC
  labels: {}
  # -- primary.persistence.annotations MariaDB primary persistent volume claim annotations
  annotations: {}
  # -- primary.persistence.accessModes MariaDB primary persistent volume access Modes
  accessModes:
    - ReadWriteOnce
  # -- primary.persistence.size MariaDB primary persistent volume size
  size: 8Gi
  # -- primary.persistence.selector Selector to match an existing Persistent Volume
  # selector:
  #   matchLabels:
  #     app: my-app
  selector: {}



image:
  repository: ghcr.io/wjentner/k8s-db-backup-retention
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

rbac:
  create: true
  role:
    name: ""
    annotations: {}
  roleBinding:
    name: ""
    annotations: {}

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
